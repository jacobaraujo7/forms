// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: camel_case_types, constant_identifier_names, depend_on_referenced_packages, non_constant_identifier_names

import 'dart:convert' as convert;
import 'package:orm/configure.dart';
import 'package:orm/orm.dart' as runtime;
import 'package:orm/dmmf.dart' as dmmf;
import 'package:json_annotation/json_annotation.dart' as json_annotation;

export 'package:orm/orm.dart'
    show Datasource, PrismaNull, PrismaUnion, TransactionIsolationLevel;

part 'prisma_client.g.dart';

//******************************************************************************
// This file was generated by Prisma ORM
// GitHub: https://github.com/odroe/prisma-dart
//******************************************************************************

enum ClientScalarFieldEnum {
  id,
  createdAt,
  email,
  name,
  cpf,
  city,
  state,
}

enum SortOrder {
  asc,
  desc,
}

class ClientWhereInput implements runtime.JsonSerializable {
  const ClientWhereInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.createdAt,
    this.email,
    this.name,
    this.cpf,
    this.city,
    this.state,
  });

  final List<ClientWhereInput>? AND;
  final List<ClientWhereInput>? OR;
  final List<ClientWhereInput>? NOT;
  final runtime.PrismaUnion<IntFilter, int>? id;
  final runtime.PrismaUnion<DateTimeFilter, DateTime>? createdAt;
  final runtime.PrismaUnion<StringFilter, String>? email;
  final runtime.PrismaUnion<StringFilter, String>? name;
  final runtime.PrismaUnion<StringFilter, String>? cpf;
  final runtime.PrismaUnion<StringFilter, String>? city;
  final runtime.PrismaUnion<StringFilter, String>? state;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'AND': AND,
        'OR': OR,
        'NOT': NOT,
        'id': id,
        'createdAt': createdAt,
        'email': email,
        'name': name,
        'cpf': cpf,
        'city': city,
        'state': state
      };
}

class ClientOrderByWithRelationInput implements runtime.JsonSerializable {
  const ClientOrderByWithRelationInput({
    this.id,
    this.createdAt,
    this.email,
    this.name,
    this.cpf,
    this.city,
    this.state,
  });

  final SortOrder? id;
  final SortOrder? createdAt;
  final SortOrder? email;
  final SortOrder? name;
  final SortOrder? cpf;
  final SortOrder? city;
  final SortOrder? state;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'id': id,
        'createdAt': createdAt,
        'email': email,
        'name': name,
        'cpf': cpf,
        'city': city,
        'state': state
      };
}

class ClientWhereUniqueInput implements runtime.JsonSerializable {
  const ClientWhereUniqueInput({
    this.id,
    this.email,
  });

  final int? id;
  final String? email;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{'id': id, 'email': email};
}

class ClientOrderByWithAggregationInput implements runtime.JsonSerializable {
  const ClientOrderByWithAggregationInput({
    this.id,
    this.createdAt,
    this.email,
    this.name,
    this.cpf,
    this.city,
    this.state,
    this.$count,
    this.$avg,
    this.$max,
    this.$min,
    this.$sum,
  });

  final SortOrder? id;
  final SortOrder? createdAt;
  final SortOrder? email;
  final SortOrder? name;
  final SortOrder? cpf;
  final SortOrder? city;
  final SortOrder? state;
  final ClientCountOrderByAggregateInput? $count;
  final ClientAvgOrderByAggregateInput? $avg;
  final ClientMaxOrderByAggregateInput? $max;
  final ClientMinOrderByAggregateInput? $min;
  final ClientSumOrderByAggregateInput? $sum;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'id': id,
        'createdAt': createdAt,
        'email': email,
        'name': name,
        'cpf': cpf,
        'city': city,
        'state': state,
        '_count': $count,
        '_avg': $avg,
        '_max': $max,
        '_min': $min,
        '_sum': $sum
      };
}

class ClientScalarWhereWithAggregatesInput implements runtime.JsonSerializable {
  const ClientScalarWhereWithAggregatesInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.createdAt,
    this.email,
    this.name,
    this.cpf,
    this.city,
    this.state,
  });

  final List<ClientScalarWhereWithAggregatesInput>? AND;
  final List<ClientScalarWhereWithAggregatesInput>? OR;
  final List<ClientScalarWhereWithAggregatesInput>? NOT;
  final runtime.PrismaUnion<IntWithAggregatesFilter, int>? id;
  final runtime.PrismaUnion<DateTimeWithAggregatesFilter, DateTime>? createdAt;
  final runtime.PrismaUnion<StringWithAggregatesFilter, String>? email;
  final runtime.PrismaUnion<StringWithAggregatesFilter, String>? name;
  final runtime.PrismaUnion<StringWithAggregatesFilter, String>? cpf;
  final runtime.PrismaUnion<StringWithAggregatesFilter, String>? city;
  final runtime.PrismaUnion<StringWithAggregatesFilter, String>? state;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'AND': AND,
        'OR': OR,
        'NOT': NOT,
        'id': id,
        'createdAt': createdAt,
        'email': email,
        'name': name,
        'cpf': cpf,
        'city': city,
        'state': state
      };
}

class ClientCreateInput implements runtime.JsonSerializable {
  const ClientCreateInput({
    this.createdAt,
    required this.email,
    required this.name,
    required this.cpf,
    required this.city,
    required this.state,
  });

  final DateTime? createdAt;
  final String email;
  final String name;
  final String cpf;
  final String city;
  final String state;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'createdAt': createdAt,
        'email': email,
        'name': name,
        'cpf': cpf,
        'city': city,
        'state': state
      };
}

class ClientUncheckedCreateInput implements runtime.JsonSerializable {
  const ClientUncheckedCreateInput({
    this.id,
    this.createdAt,
    required this.email,
    required this.name,
    required this.cpf,
    required this.city,
    required this.state,
  });

  final int? id;
  final DateTime? createdAt;
  final String email;
  final String name;
  final String cpf;
  final String city;
  final String state;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'id': id,
        'createdAt': createdAt,
        'email': email,
        'name': name,
        'cpf': cpf,
        'city': city,
        'state': state
      };
}

class ClientUpdateInput implements runtime.JsonSerializable {
  const ClientUpdateInput({
    this.createdAt,
    this.email,
    this.name,
    this.cpf,
    this.city,
    this.state,
  });

  final runtime.PrismaUnion<DateTime, DateTimeFieldUpdateOperationsInput>?
      createdAt;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? email;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? name;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? cpf;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? city;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? state;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'createdAt': createdAt,
        'email': email,
        'name': name,
        'cpf': cpf,
        'city': city,
        'state': state
      };
}

class ClientUncheckedUpdateInput implements runtime.JsonSerializable {
  const ClientUncheckedUpdateInput({
    this.id,
    this.createdAt,
    this.email,
    this.name,
    this.cpf,
    this.city,
    this.state,
  });

  final runtime.PrismaUnion<int, IntFieldUpdateOperationsInput>? id;
  final runtime.PrismaUnion<DateTime, DateTimeFieldUpdateOperationsInput>?
      createdAt;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? email;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? name;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? cpf;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? city;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? state;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'id': id,
        'createdAt': createdAt,
        'email': email,
        'name': name,
        'cpf': cpf,
        'city': city,
        'state': state
      };
}

class ClientUpdateManyMutationInput implements runtime.JsonSerializable {
  const ClientUpdateManyMutationInput({
    this.createdAt,
    this.email,
    this.name,
    this.cpf,
    this.city,
    this.state,
  });

  final runtime.PrismaUnion<DateTime, DateTimeFieldUpdateOperationsInput>?
      createdAt;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? email;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? name;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? cpf;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? city;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? state;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'createdAt': createdAt,
        'email': email,
        'name': name,
        'cpf': cpf,
        'city': city,
        'state': state
      };
}

class ClientUncheckedUpdateManyInput implements runtime.JsonSerializable {
  const ClientUncheckedUpdateManyInput({
    this.id,
    this.createdAt,
    this.email,
    this.name,
    this.cpf,
    this.city,
    this.state,
  });

  final runtime.PrismaUnion<int, IntFieldUpdateOperationsInput>? id;
  final runtime.PrismaUnion<DateTime, DateTimeFieldUpdateOperationsInput>?
      createdAt;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? email;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? name;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? cpf;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? city;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? state;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'id': id,
        'createdAt': createdAt,
        'email': email,
        'name': name,
        'cpf': cpf,
        'city': city,
        'state': state
      };
}

class IntFilter implements runtime.JsonSerializable {
  const IntFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final int? equals;
  final List<int>? in$;
  final List<int>? notIn;
  final int? lt;
  final int? lte;
  final int? gt;
  final int? gte;
  final runtime.PrismaUnion<int, NestedIntFilter>? not;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'not': not
      };
}

class DateTimeFilter implements runtime.JsonSerializable {
  const DateTimeFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final DateTime? equals;
  final List<DateTime>? in$;
  final List<DateTime>? notIn;
  final DateTime? lt;
  final DateTime? lte;
  final DateTime? gt;
  final DateTime? gte;
  final runtime.PrismaUnion<DateTime, NestedDateTimeFilter>? not;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'not': not
      };
}

class StringFilter implements runtime.JsonSerializable {
  const StringFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.not,
  });

  final String? equals;
  final List<String>? in$;
  final List<String>? notIn;
  final String? lt;
  final String? lte;
  final String? gt;
  final String? gte;
  final String? contains;
  final String? startsWith;
  final String? endsWith;
  final runtime.PrismaUnion<String, NestedStringFilter>? not;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'contains': contains,
        'startsWith': startsWith,
        'endsWith': endsWith,
        'not': not
      };
}

class ClientCountOrderByAggregateInput implements runtime.JsonSerializable {
  const ClientCountOrderByAggregateInput({
    this.id,
    this.createdAt,
    this.email,
    this.name,
    this.cpf,
    this.city,
    this.state,
  });

  final SortOrder? id;
  final SortOrder? createdAt;
  final SortOrder? email;
  final SortOrder? name;
  final SortOrder? cpf;
  final SortOrder? city;
  final SortOrder? state;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'id': id,
        'createdAt': createdAt,
        'email': email,
        'name': name,
        'cpf': cpf,
        'city': city,
        'state': state
      };
}

class ClientAvgOrderByAggregateInput implements runtime.JsonSerializable {
  const ClientAvgOrderByAggregateInput({
    this.id,
  });

  final SortOrder? id;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{'id': id};
}

class ClientMaxOrderByAggregateInput implements runtime.JsonSerializable {
  const ClientMaxOrderByAggregateInput({
    this.id,
    this.createdAt,
    this.email,
    this.name,
    this.cpf,
    this.city,
    this.state,
  });

  final SortOrder? id;
  final SortOrder? createdAt;
  final SortOrder? email;
  final SortOrder? name;
  final SortOrder? cpf;
  final SortOrder? city;
  final SortOrder? state;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'id': id,
        'createdAt': createdAt,
        'email': email,
        'name': name,
        'cpf': cpf,
        'city': city,
        'state': state
      };
}

class ClientMinOrderByAggregateInput implements runtime.JsonSerializable {
  const ClientMinOrderByAggregateInput({
    this.id,
    this.createdAt,
    this.email,
    this.name,
    this.cpf,
    this.city,
    this.state,
  });

  final SortOrder? id;
  final SortOrder? createdAt;
  final SortOrder? email;
  final SortOrder? name;
  final SortOrder? cpf;
  final SortOrder? city;
  final SortOrder? state;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'id': id,
        'createdAt': createdAt,
        'email': email,
        'name': name,
        'cpf': cpf,
        'city': city,
        'state': state
      };
}

class ClientSumOrderByAggregateInput implements runtime.JsonSerializable {
  const ClientSumOrderByAggregateInput({
    this.id,
  });

  final SortOrder? id;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{'id': id};
}

class IntWithAggregatesFilter implements runtime.JsonSerializable {
  const IntWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  final int? equals;
  final List<int>? in$;
  final List<int>? notIn;
  final int? lt;
  final int? lte;
  final int? gt;
  final int? gte;
  final runtime.PrismaUnion<int, NestedIntWithAggregatesFilter>? not;
  final NestedIntFilter? $count;
  final NestedFloatFilter? $avg;
  final NestedIntFilter? $sum;
  final NestedIntFilter? $min;
  final NestedIntFilter? $max;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'not': not,
        '_count': $count,
        '_avg': $avg,
        '_sum': $sum,
        '_min': $min,
        '_max': $max
      };
}

class DateTimeWithAggregatesFilter implements runtime.JsonSerializable {
  const DateTimeWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final DateTime? equals;
  final List<DateTime>? in$;
  final List<DateTime>? notIn;
  final DateTime? lt;
  final DateTime? lte;
  final DateTime? gt;
  final DateTime? gte;
  final runtime.PrismaUnion<DateTime, NestedDateTimeWithAggregatesFilter>? not;
  final NestedIntFilter? $count;
  final NestedDateTimeFilter? $min;
  final NestedDateTimeFilter? $max;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'not': not,
        '_count': $count,
        '_min': $min,
        '_max': $max
      };
}

class StringWithAggregatesFilter implements runtime.JsonSerializable {
  const StringWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final String? equals;
  final List<String>? in$;
  final List<String>? notIn;
  final String? lt;
  final String? lte;
  final String? gt;
  final String? gte;
  final String? contains;
  final String? startsWith;
  final String? endsWith;
  final runtime.PrismaUnion<String, NestedStringWithAggregatesFilter>? not;
  final NestedIntFilter? $count;
  final NestedStringFilter? $min;
  final NestedStringFilter? $max;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'contains': contains,
        'startsWith': startsWith,
        'endsWith': endsWith,
        'not': not,
        '_count': $count,
        '_min': $min,
        '_max': $max
      };
}

class DateTimeFieldUpdateOperationsInput implements runtime.JsonSerializable {
  const DateTimeFieldUpdateOperationsInput({
    this.set$,
  });

  final DateTime? set$;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{'set': set$};
}

class StringFieldUpdateOperationsInput implements runtime.JsonSerializable {
  const StringFieldUpdateOperationsInput({
    this.set$,
  });

  final String? set$;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{'set': set$};
}

class IntFieldUpdateOperationsInput implements runtime.JsonSerializable {
  const IntFieldUpdateOperationsInput({
    this.set$,
    this.increment,
    this.decrement,
    this.multiply,
    this.divide,
  });

  final int? set$;
  final int? increment;
  final int? decrement;
  final int? multiply;
  final int? divide;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'set': set$,
        'increment': increment,
        'decrement': decrement,
        'multiply': multiply,
        'divide': divide
      };
}

class NestedIntFilter implements runtime.JsonSerializable {
  const NestedIntFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final int? equals;
  final List<int>? in$;
  final List<int>? notIn;
  final int? lt;
  final int? lte;
  final int? gt;
  final int? gte;
  final runtime.PrismaUnion<int, NestedIntFilter>? not;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'not': not
      };
}

class NestedDateTimeFilter implements runtime.JsonSerializable {
  const NestedDateTimeFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final DateTime? equals;
  final List<DateTime>? in$;
  final List<DateTime>? notIn;
  final DateTime? lt;
  final DateTime? lte;
  final DateTime? gt;
  final DateTime? gte;
  final runtime.PrismaUnion<DateTime, NestedDateTimeFilter>? not;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'not': not
      };
}

class NestedStringFilter implements runtime.JsonSerializable {
  const NestedStringFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.not,
  });

  final String? equals;
  final List<String>? in$;
  final List<String>? notIn;
  final String? lt;
  final String? lte;
  final String? gt;
  final String? gte;
  final String? contains;
  final String? startsWith;
  final String? endsWith;
  final runtime.PrismaUnion<String, NestedStringFilter>? not;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'contains': contains,
        'startsWith': startsWith,
        'endsWith': endsWith,
        'not': not
      };
}

class NestedIntWithAggregatesFilter implements runtime.JsonSerializable {
  const NestedIntWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  final int? equals;
  final List<int>? in$;
  final List<int>? notIn;
  final int? lt;
  final int? lte;
  final int? gt;
  final int? gte;
  final runtime.PrismaUnion<int, NestedIntWithAggregatesFilter>? not;
  final NestedIntFilter? $count;
  final NestedFloatFilter? $avg;
  final NestedIntFilter? $sum;
  final NestedIntFilter? $min;
  final NestedIntFilter? $max;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'not': not,
        '_count': $count,
        '_avg': $avg,
        '_sum': $sum,
        '_min': $min,
        '_max': $max
      };
}

class NestedFloatFilter implements runtime.JsonSerializable {
  const NestedFloatFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final double? equals;
  final List<double>? in$;
  final List<double>? notIn;
  final double? lt;
  final double? lte;
  final double? gt;
  final double? gte;
  final runtime.PrismaUnion<double, NestedFloatFilter>? not;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'not': not
      };
}

class NestedDateTimeWithAggregatesFilter implements runtime.JsonSerializable {
  const NestedDateTimeWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final DateTime? equals;
  final List<DateTime>? in$;
  final List<DateTime>? notIn;
  final DateTime? lt;
  final DateTime? lte;
  final DateTime? gt;
  final DateTime? gte;
  final runtime.PrismaUnion<DateTime, NestedDateTimeWithAggregatesFilter>? not;
  final NestedIntFilter? $count;
  final NestedDateTimeFilter? $min;
  final NestedDateTimeFilter? $max;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'not': not,
        '_count': $count,
        '_min': $min,
        '_max': $max
      };
}

class NestedStringWithAggregatesFilter implements runtime.JsonSerializable {
  const NestedStringWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final String? equals;
  final List<String>? in$;
  final List<String>? notIn;
  final String? lt;
  final String? lte;
  final String? gt;
  final String? gte;
  final String? contains;
  final String? startsWith;
  final String? endsWith;
  final runtime.PrismaUnion<String, NestedStringWithAggregatesFilter>? not;
  final NestedIntFilter? $count;
  final NestedStringFilter? $min;
  final NestedStringFilter? $max;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'contains': contains,
        'startsWith': startsWith,
        'endsWith': endsWith,
        'not': not,
        '_count': $count,
        '_min': $min,
        '_max': $max
      };
}

@json_annotation.JsonSerializable(
    createFactory: true, createToJson: true, explicitToJson: true)
class AggregateClient {
  const AggregateClient({
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  factory AggregateClient.fromJson(Map<String, dynamic> json) =>
      _$AggregateClientFromJson(json);

  @json_annotation.JsonKey(name: '_avg')
  final ClientAvgAggregateOutputType? $avg;

  @json_annotation.JsonKey(name: '_sum')
  final ClientSumAggregateOutputType? $sum;

  @json_annotation.JsonKey(name: '_min')
  final ClientMinAggregateOutputType? $min;

  @json_annotation.JsonKey(name: '_max')
  final ClientMaxAggregateOutputType? $max;

  Map<String, dynamic> toJson() => _$AggregateClientToJson(this);
}

@json_annotation.JsonSerializable(
    createFactory: true, createToJson: true, explicitToJson: true)
class ClientGroupByOutputType {
  const ClientGroupByOutputType({
    required this.id,
    required this.createdAt,
    required this.email,
    required this.name,
    required this.cpf,
    required this.city,
    required this.state,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  factory ClientGroupByOutputType.fromJson(Map<String, dynamic> json) =>
      _$ClientGroupByOutputTypeFromJson(json);

  @json_annotation.JsonKey(name: 'id')
  final int id;

  @json_annotation.JsonKey(name: 'createdAt')
  final DateTime createdAt;

  @json_annotation.JsonKey(name: 'email')
  final String email;

  @json_annotation.JsonKey(name: 'name')
  final String name;

  @json_annotation.JsonKey(name: 'cpf')
  final String cpf;

  @json_annotation.JsonKey(name: 'city')
  final String city;

  @json_annotation.JsonKey(name: 'state')
  final String state;

  @json_annotation.JsonKey(name: '_avg')
  final ClientAvgAggregateOutputType? $avg;

  @json_annotation.JsonKey(name: '_sum')
  final ClientSumAggregateOutputType? $sum;

  @json_annotation.JsonKey(name: '_min')
  final ClientMinAggregateOutputType? $min;

  @json_annotation.JsonKey(name: '_max')
  final ClientMaxAggregateOutputType? $max;

  Map<String, dynamic> toJson() => _$ClientGroupByOutputTypeToJson(this);
}

@json_annotation.JsonSerializable(
    createFactory: true, createToJson: true, explicitToJson: true)
class AffectedRowsOutput {
  const AffectedRowsOutput({
    required this.count,
  });

  factory AffectedRowsOutput.fromJson(Map<String, dynamic> json) =>
      _$AffectedRowsOutputFromJson(json);

  @json_annotation.JsonKey(name: 'count')
  final int count;

  Map<String, dynamic> toJson() => _$AffectedRowsOutputToJson(this);
}

@json_annotation.JsonSerializable(
    createFactory: true, createToJson: true, explicitToJson: true)
class ClientCountAggregateOutputType {
  const ClientCountAggregateOutputType({
    required this.id,
    required this.createdAt,
    required this.email,
    required this.name,
    required this.cpf,
    required this.city,
    required this.state,
    required this.$all,
  });

  factory ClientCountAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$ClientCountAggregateOutputTypeFromJson(json);

  @json_annotation.JsonKey(name: 'id')
  final int id;

  @json_annotation.JsonKey(name: 'createdAt')
  final int createdAt;

  @json_annotation.JsonKey(name: 'email')
  final int email;

  @json_annotation.JsonKey(name: 'name')
  final int name;

  @json_annotation.JsonKey(name: 'cpf')
  final int cpf;

  @json_annotation.JsonKey(name: 'city')
  final int city;

  @json_annotation.JsonKey(name: 'state')
  final int state;

  @json_annotation.JsonKey(name: '_all')
  final int $all;

  Map<String, dynamic> toJson() => _$ClientCountAggregateOutputTypeToJson(this);
}

@json_annotation.JsonSerializable(
    createFactory: true, createToJson: true, explicitToJson: true)
class ClientAvgAggregateOutputType {
  const ClientAvgAggregateOutputType({
    this.id,
  });

  factory ClientAvgAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$ClientAvgAggregateOutputTypeFromJson(json);

  @json_annotation.JsonKey(name: 'id')
  final double? id;

  Map<String, dynamic> toJson() => _$ClientAvgAggregateOutputTypeToJson(this);
}

@json_annotation.JsonSerializable(
    createFactory: true, createToJson: true, explicitToJson: true)
class ClientSumAggregateOutputType {
  const ClientSumAggregateOutputType({
    this.id,
  });

  factory ClientSumAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$ClientSumAggregateOutputTypeFromJson(json);

  @json_annotation.JsonKey(name: 'id')
  final int? id;

  Map<String, dynamic> toJson() => _$ClientSumAggregateOutputTypeToJson(this);
}

@json_annotation.JsonSerializable(
    createFactory: true, createToJson: true, explicitToJson: true)
class ClientMinAggregateOutputType {
  const ClientMinAggregateOutputType({
    this.id,
    this.createdAt,
    this.email,
    this.name,
    this.cpf,
    this.city,
    this.state,
  });

  factory ClientMinAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$ClientMinAggregateOutputTypeFromJson(json);

  @json_annotation.JsonKey(name: 'id')
  final int? id;

  @json_annotation.JsonKey(name: 'createdAt')
  final DateTime? createdAt;

  @json_annotation.JsonKey(name: 'email')
  final String? email;

  @json_annotation.JsonKey(name: 'name')
  final String? name;

  @json_annotation.JsonKey(name: 'cpf')
  final String? cpf;

  @json_annotation.JsonKey(name: 'city')
  final String? city;

  @json_annotation.JsonKey(name: 'state')
  final String? state;

  Map<String, dynamic> toJson() => _$ClientMinAggregateOutputTypeToJson(this);
}

@json_annotation.JsonSerializable(
    createFactory: true, createToJson: true, explicitToJson: true)
class ClientMaxAggregateOutputType {
  const ClientMaxAggregateOutputType({
    this.id,
    this.createdAt,
    this.email,
    this.name,
    this.cpf,
    this.city,
    this.state,
  });

  factory ClientMaxAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$ClientMaxAggregateOutputTypeFromJson(json);

  @json_annotation.JsonKey(name: 'id')
  final int? id;

  @json_annotation.JsonKey(name: 'createdAt')
  final DateTime? createdAt;

  @json_annotation.JsonKey(name: 'email')
  final String? email;

  @json_annotation.JsonKey(name: 'name')
  final String? name;

  @json_annotation.JsonKey(name: 'cpf')
  final String? cpf;

  @json_annotation.JsonKey(name: 'city')
  final String? city;

  @json_annotation.JsonKey(name: 'state')
  final String? state;

  Map<String, dynamic> toJson() => _$ClientMaxAggregateOutputTypeToJson(this);
}

@json_annotation.JsonSerializable(
    createFactory: true, createToJson: true, explicitToJson: true)
class Client {
  const Client({
    required this.id,
    required this.createdAt,
    required this.email,
    required this.name,
    required this.cpf,
    required this.city,
    required this.state,
  });

  factory Client.fromJson(Map<String, dynamic> json) => _$ClientFromJson(json);

  @json_annotation.JsonKey(name: 'id')
  final int id;

  @json_annotation.JsonKey(name: 'createdAt')
  final DateTime createdAt;

  @json_annotation.JsonKey(name: 'email')
  final String email;

  @json_annotation.JsonKey(name: 'name')
  final String name;

  @json_annotation.JsonKey(name: 'cpf')
  final String cpf;

  @json_annotation.JsonKey(name: 'city')
  final String city;

  @json_annotation.JsonKey(name: 'state')
  final String state;

  Map<String, dynamic> toJson() => _$ClientToJson(this);
}

class ClientDelegate {
  const ClientDelegate({
    required runtime.Engine engine,
    runtime.QueryEngineRequestHeaders? headers,
  })  : _engine = engine,
        _headers = headers;

  final runtime.Engine _engine;
  final runtime.QueryEngineRequestHeaders? _headers;

  Future<Client?> findUnique({
    required ClientWhereUniqueInput where,
  }) async {
    final String sdl = runtime.GraphQLField(
      'query',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'findUniqueClient',
          args: runtime.GraphQLArgs(
              [runtime.GraphQLArg('where', where, isRequired: true)]),
          fields: runtime.GraphQLFields(ClientScalarFieldEnum.values
              .map((ClientScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    if (result.data['findUniqueClient'] == null) {
      return null;
    }

    return Client.fromJson(
        result.data['findUniqueClient'] as Map<String, dynamic>);
  }

  Future<Client?> findFirst({
    ClientWhereInput? where,
    List<ClientOrderByWithRelationInput>? orderBy,
    ClientWhereUniqueInput? cursor,
    int? take,
    int? skip,
    List<ClientScalarFieldEnum>? distinct,
  }) async {
    final String sdl = runtime.GraphQLField(
      'query',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'findFirstClient',
          args: runtime.GraphQLArgs([
            runtime.GraphQLArg('where', where, isRequired: false),
            runtime.GraphQLArg('orderBy', orderBy, isRequired: false),
            runtime.GraphQLArg('cursor', cursor, isRequired: false),
            runtime.GraphQLArg('take', take, isRequired: false),
            runtime.GraphQLArg('skip', skip, isRequired: false),
            runtime.GraphQLArg('distinct', distinct, isRequired: false)
          ]),
          fields: runtime.GraphQLFields(ClientScalarFieldEnum.values
              .map((ClientScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    if (result.data['findFirstClient'] == null) {
      return null;
    }

    return Client.fromJson(
        result.data['findFirstClient'] as Map<String, dynamic>);
  }

  Future<List<Client>> findMany({
    ClientWhereInput? where,
    List<ClientOrderByWithRelationInput>? orderBy,
    ClientWhereUniqueInput? cursor,
    int? take,
    int? skip,
    List<ClientScalarFieldEnum>? distinct,
  }) async {
    final String sdl = runtime.GraphQLField(
      'query',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'findManyClient',
          args: runtime.GraphQLArgs([
            runtime.GraphQLArg('where', where, isRequired: false),
            runtime.GraphQLArg('orderBy', orderBy, isRequired: false),
            runtime.GraphQLArg('cursor', cursor, isRequired: false),
            runtime.GraphQLArg('take', take, isRequired: false),
            runtime.GraphQLArg('skip', skip, isRequired: false),
            runtime.GraphQLArg('distinct', distinct, isRequired: false)
          ]),
          fields: runtime.GraphQLFields(ClientScalarFieldEnum.values
              .map((ClientScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    return (result.data['findManyClient'] as List<dynamic>)
        .map<Client>(
          (dynamic item) => Client.fromJson(item as Map<String, dynamic>),
        )
        .toList();
  }

  Future<Client> create({
    required runtime.PrismaUnion<ClientCreateInput, ClientUncheckedCreateInput>
        data,
  }) async {
    final String sdl = runtime.GraphQLField(
      'mutation',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'createOneClient',
          args: runtime.GraphQLArgs(
              [runtime.GraphQLArg('data', data, isRequired: true)]),
          fields: runtime.GraphQLFields(ClientScalarFieldEnum.values
              .map((ClientScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    return Client.fromJson(
        result.data['createOneClient'] as Map<String, dynamic>);
  }

  Future<Client?> update({
    required runtime.PrismaUnion<ClientUpdateInput, ClientUncheckedUpdateInput>
        data,
    required ClientWhereUniqueInput where,
  }) async {
    final String sdl = runtime.GraphQLField(
      'mutation',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'updateOneClient',
          args: runtime.GraphQLArgs([
            runtime.GraphQLArg('data', data, isRequired: true),
            runtime.GraphQLArg('where', where, isRequired: true)
          ]),
          fields: runtime.GraphQLFields(ClientScalarFieldEnum.values
              .map((ClientScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    if (result.data['updateOneClient'] == null) {
      return null;
    }

    return Client.fromJson(
        result.data['updateOneClient'] as Map<String, dynamic>);
  }

  Future<AffectedRowsOutput> updateMany({
    required runtime.PrismaUnion<ClientUpdateManyMutationInput,
            ClientUncheckedUpdateManyInput>
        data,
    ClientWhereInput? where,
  }) async {
    final String sdl = runtime.GraphQLField(
      'mutation',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'updateManyClient',
          args: runtime.GraphQLArgs([
            runtime.GraphQLArg('data', data, isRequired: true),
            runtime.GraphQLArg('where', where, isRequired: false)
          ]),
          fields: runtime.GraphQLFields(ClientScalarFieldEnum.values
              .map((ClientScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    return AffectedRowsOutput.fromJson(
        result.data['updateManyClient'] as Map<String, dynamic>);
  }

  Future<Client> upsert({
    required ClientWhereUniqueInput where,
    required runtime.PrismaUnion<ClientCreateInput, ClientUncheckedCreateInput>
        create,
    required runtime.PrismaUnion<ClientUpdateInput, ClientUncheckedUpdateInput>
        update,
  }) async {
    final String sdl = runtime.GraphQLField(
      'mutation',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'upsertOneClient',
          args: runtime.GraphQLArgs([
            runtime.GraphQLArg('where', where, isRequired: true),
            runtime.GraphQLArg('create', create, isRequired: true),
            runtime.GraphQLArg('update', update, isRequired: true)
          ]),
          fields: runtime.GraphQLFields(ClientScalarFieldEnum.values
              .map((ClientScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    return Client.fromJson(
        result.data['upsertOneClient'] as Map<String, dynamic>);
  }

  Future<Client?> delete({
    required ClientWhereUniqueInput where,
  }) async {
    final String sdl = runtime.GraphQLField(
      'mutation',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'deleteOneClient',
          args: runtime.GraphQLArgs(
              [runtime.GraphQLArg('where', where, isRequired: true)]),
          fields: runtime.GraphQLFields(ClientScalarFieldEnum.values
              .map((ClientScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    if (result.data['deleteOneClient'] == null) {
      return null;
    }

    return Client.fromJson(
        result.data['deleteOneClient'] as Map<String, dynamic>);
  }

  Future<AffectedRowsOutput> deleteMany({
    ClientWhereInput? where,
  }) async {
    final String sdl = runtime.GraphQLField(
      'mutation',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'deleteManyClient',
          args: runtime.GraphQLArgs(
              [runtime.GraphQLArg('where', where, isRequired: false)]),
          fields: runtime.GraphQLFields(ClientScalarFieldEnum.values
              .map((ClientScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    return AffectedRowsOutput.fromJson(
        result.data['deleteManyClient'] as Map<String, dynamic>);
  }

  Future<AggregateClient> aggregate({
    ClientWhereInput? where,
    List<ClientOrderByWithRelationInput>? orderBy,
    ClientWhereUniqueInput? cursor,
    int? take,
    int? skip,
  }) async {
    final String sdl = runtime.GraphQLField(
      'query',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'aggregateClient',
          args: runtime.GraphQLArgs([
            runtime.GraphQLArg('where', where, isRequired: false),
            runtime.GraphQLArg('orderBy', orderBy, isRequired: false),
            runtime.GraphQLArg('cursor', cursor, isRequired: false),
            runtime.GraphQLArg('take', take, isRequired: false),
            runtime.GraphQLArg('skip', skip, isRequired: false)
          ]),
          fields: runtime.GraphQLFields(ClientScalarFieldEnum.values
              .map((ClientScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    return AggregateClient.fromJson(
        result.data['aggregateClient'] as Map<String, dynamic>);
  }

  Future<List<ClientGroupByOutputType>> groupBy({
    ClientWhereInput? where,
    List<ClientOrderByWithAggregationInput>? orderBy,
    required List<ClientScalarFieldEnum> by,
    ClientScalarWhereWithAggregatesInput? having,
    int? take,
    int? skip,
  }) async {
    final String sdl = runtime.GraphQLField(
      'query',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'groupByClient',
          args: runtime.GraphQLArgs([
            runtime.GraphQLArg('where', where, isRequired: false),
            runtime.GraphQLArg('orderBy', orderBy, isRequired: false),
            runtime.GraphQLArg('by', by, isRequired: true),
            runtime.GraphQLArg('having', having, isRequired: false),
            runtime.GraphQLArg('take', take, isRequired: false),
            runtime.GraphQLArg('skip', skip, isRequired: false)
          ]),
          fields: runtime.GraphQLFields(ClientScalarFieldEnum.values
              .map((ClientScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    return (result.data['groupByClient'] as List<dynamic>)
        .map<ClientGroupByOutputType>(
          (dynamic item) =>
              ClientGroupByOutputType.fromJson(item as Map<String, dynamic>),
        )
        .toList();
  }
}

/// Prisma schema DMMF json string.
const String _dmmfStr =
    r'{"datamodel":{"models":[{"name":"Client","dbName":null,"fields":[{"name":"id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":true,"type":"Int","default":{"name":"autoincrement","args":[]},"isGenerated":false,"isUpdatedAt":false,"dbNames":null,"relationFromFields":null,"relationToFields":null,"relationOnDelete":null,"relationName":null,"documentation":null,"additionalProperties":{"name":"id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":true,"type":"Int","default":{"name":"autoincrement","args":[]},"isGenerated":false,"isUpdatedAt":false}},{"name":"createdAt","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":true,"type":"DateTime","default":{"name":"now","args":[]},"isGenerated":false,"isUpdatedAt":false,"dbNames":null,"relationFromFields":null,"relationToFields":null,"relationOnDelete":null,"relationName":null,"documentation":null,"additionalProperties":{"name":"createdAt","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":true,"type":"DateTime","default":{"name":"now","args":[]},"isGenerated":false,"isUpdatedAt":false}},{"name":"email","kind":"scalar","isList":false,"isRequired":true,"isUnique":true,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false,"dbNames":null,"default":null,"relationFromFields":null,"relationToFields":null,"relationOnDelete":null,"relationName":null,"documentation":null,"additionalProperties":{"name":"email","kind":"scalar","isList":false,"isRequired":true,"isUnique":true,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false}},{"name":"name","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false,"dbNames":null,"default":null,"relationFromFields":null,"relationToFields":null,"relationOnDelete":null,"relationName":null,"documentation":null,"additionalProperties":{"name":"name","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false}},{"name":"cpf","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false,"dbNames":null,"default":null,"relationFromFields":null,"relationToFields":null,"relationOnDelete":null,"relationName":null,"documentation":null,"additionalProperties":{"name":"cpf","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false}},{"name":"city","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false,"dbNames":null,"default":null,"relationFromFields":null,"relationToFields":null,"relationOnDelete":null,"relationName":null,"documentation":null,"additionalProperties":{"name":"city","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false}},{"name":"state","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false,"dbNames":null,"default":null,"relationFromFields":null,"relationToFields":null,"relationOnDelete":null,"relationName":null,"documentation":null,"additionalProperties":{"name":"state","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false}}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false,"fieldsMap":null,"documentation":null,"extra":{"name":"Client","dbName":null,"fields":[{"name":"id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":true,"type":"Int","default":{"name":"autoincrement","args":[]},"isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":true,"type":"DateTime","default":{"name":"now","args":[]},"isGenerated":false,"isUpdatedAt":false},{"name":"email","kind":"scalar","isList":false,"isRequired":true,"isUnique":true,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"name","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"cpf","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"city","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"state","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false}}],"enums":[],"types":[]},"schema":{"rootQueryType":null,"rootMutationType":null,"inputObjectTypes":{"model":null,"prisma":[{"name":"ClientWhereInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"AND","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"ClientWhereInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"ClientWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"OR","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"ClientWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"NOT","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"ClientWhereInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"ClientWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"IntFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTimeFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"StringFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"name","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"StringFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"cpf","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"StringFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"city","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"StringFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"state","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"StringFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"ClientOrderByWithRelationInput","constraints":{"maxNumFields":1,"minNumFields":0},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"name","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"cpf","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"city","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"state","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"ClientWhereUniqueInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"ClientOrderByWithAggregationInput","constraints":{"maxNumFields":1,"minNumFields":0},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"name","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"cpf","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"city","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"state","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"_count","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"ClientCountOrderByAggregateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_avg","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"ClientAvgOrderByAggregateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_max","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"ClientMaxOrderByAggregateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_min","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"ClientMinOrderByAggregateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_sum","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"ClientSumOrderByAggregateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"ClientScalarWhereWithAggregatesInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"AND","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"ClientScalarWhereWithAggregatesInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"ClientScalarWhereWithAggregatesInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"OR","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"ClientScalarWhereWithAggregatesInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"NOT","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"ClientScalarWhereWithAggregatesInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"ClientScalarWhereWithAggregatesInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"IntWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTimeWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"StringWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"name","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"StringWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"cpf","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"StringWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"city","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"StringWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"state","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"StringWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"ClientCreateInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"name","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"cpf","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"city","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"state","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"ClientUncheckedCreateInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"name","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"cpf","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"city","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"state","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"ClientUpdateInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"DateTimeFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"name","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"cpf","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"city","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"state","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"ClientUncheckedUpdateInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"IntFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"DateTimeFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"name","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"cpf","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"city","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"state","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"ClientUpdateManyMutationInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"DateTimeFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"name","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"cpf","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"city","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"state","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"ClientUncheckedUpdateManyInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"IntFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"DateTimeFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"name","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"cpf","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"city","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"state","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"IntFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"DateTimeFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"NestedDateTimeFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"StringFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"contains","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"startsWith","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"endsWith","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"NestedStringFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"ClientCountOrderByAggregateInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"name","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"cpf","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"city","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"state","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"ClientAvgOrderByAggregateInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"ClientMaxOrderByAggregateInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"name","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"cpf","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"city","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"state","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"ClientMinOrderByAggregateInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"name","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"cpf","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"city","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"state","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"ClientSumOrderByAggregateInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"IntWithAggregatesFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"NestedIntWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_count","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_avg","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedFloatFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_sum","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_min","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_max","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"DateTimeWithAggregatesFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"NestedDateTimeWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_count","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_min","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedDateTimeFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_max","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedDateTimeFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"StringWithAggregatesFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"contains","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"startsWith","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"endsWith","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"NestedStringWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_count","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_min","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedStringFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_max","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedStringFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"DateTimeFieldUpdateOperationsInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"set","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"StringFieldUpdateOperationsInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"set","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"IntFieldUpdateOperationsInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"set","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"increment","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"decrement","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"multiply","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"divide","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"NestedIntFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"NestedDateTimeFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"NestedDateTimeFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"NestedStringFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"contains","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"startsWith","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"endsWith","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"NestedStringFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"NestedIntWithAggregatesFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"NestedIntWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_count","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_avg","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedFloatFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_sum","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_min","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_max","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"NestedFloatFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Float","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"Float","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"Float","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Float","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Float","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Float","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Float","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Float","location":"scalar","namespace":null},{"isList":false,"type":"NestedFloatFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"NestedDateTimeWithAggregatesFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"NestedDateTimeWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_count","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_min","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedDateTimeFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_max","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedDateTimeFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"NestedStringWithAggregatesFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"contains","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"startsWith","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"endsWith","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"NestedStringWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_count","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_min","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedStringFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_max","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedStringFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null}]},"outputObjectTypes":{"model":[{"name":"Client","fields":[{"name":"id","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"createdAt","isNullable":false,"outputType":{"isList":false,"type":"DateTime","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"email","isNullable":false,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"name","isNullable":false,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"cpf","isNullable":false,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"city","isNullable":false,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"state","isNullable":false,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null}],"prisma":[{"name":"Query","fields":[{"name":"findFirstClient","isNullable":true,"outputType":{"isList":false,"type":"Client","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"ClientWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"orderBy","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"ClientOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"ClientOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"cursor","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"ClientWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"take","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"skip","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"distinct","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"ClientScalarFieldEnum","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"findManyClient","isNullable":false,"outputType":{"isList":true,"type":"Client","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"ClientWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"orderBy","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"ClientOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"ClientOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"cursor","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"ClientWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"take","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"skip","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"distinct","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"ClientScalarFieldEnum","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"aggregateClient","isNullable":false,"outputType":{"isList":false,"type":"AggregateClient","location":"outputObjectTypes","namespace":"prisma"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"ClientWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"orderBy","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"ClientOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"ClientOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"cursor","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"ClientWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"take","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"skip","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"groupByClient","isNullable":false,"outputType":{"isList":true,"type":"ClientGroupByOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"ClientWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"orderBy","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"ClientOrderByWithAggregationInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"ClientOrderByWithAggregationInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"by","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":true,"type":"ClientScalarFieldEnum","location":"enumTypes","namespace":"prisma"},{"isList":false,"type":"ClientScalarFieldEnum","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"having","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"ClientScalarWhereWithAggregatesInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"take","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"skip","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"findUniqueClient","isNullable":true,"outputType":{"isList":false,"type":"Client","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"ClientWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"Mutation","fields":[{"name":"createOneClient","isNullable":false,"outputType":{"isList":false,"type":"Client","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"data","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"ClientCreateInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"ClientUncheckedCreateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"upsertOneClient","isNullable":false,"outputType":{"isList":false,"type":"Client","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"ClientWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"create","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"ClientCreateInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"ClientUncheckedCreateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"update","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"ClientUpdateInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"ClientUncheckedUpdateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"deleteOneClient","isNullable":true,"outputType":{"isList":false,"type":"Client","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"ClientWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"updateOneClient","isNullable":true,"outputType":{"isList":false,"type":"Client","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"data","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"ClientUpdateInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"ClientUncheckedUpdateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"where","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"ClientWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"updateManyClient","isNullable":false,"outputType":{"isList":false,"type":"AffectedRowsOutput","location":"outputObjectTypes","namespace":"prisma"},"args":[{"name":"data","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"ClientUpdateManyMutationInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"ClientUncheckedUpdateManyInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"where","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"ClientWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"deleteManyClient","isNullable":false,"outputType":{"isList":false,"type":"AffectedRowsOutput","location":"outputObjectTypes","namespace":"prisma"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"ClientWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"executeRaw","isNullable":false,"outputType":{"isList":false,"type":"Json","location":"scalar","namespace":null},"args":[{"name":"query","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"parameters","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Json","location":"scalar","namespace":null}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"queryRaw","isNullable":false,"outputType":{"isList":false,"type":"Json","location":"scalar","namespace":null},"args":[{"name":"query","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"parameters","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Json","location":"scalar","namespace":null}],"deprecation":null}],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"AggregateClient","fields":[{"name":"_count","isNullable":true,"outputType":{"isList":false,"type":"ClientCountAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_avg","isNullable":true,"outputType":{"isList":false,"type":"ClientAvgAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_sum","isNullable":true,"outputType":{"isList":false,"type":"ClientSumAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_min","isNullable":true,"outputType":{"isList":false,"type":"ClientMinAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_max","isNullable":true,"outputType":{"isList":false,"type":"ClientMaxAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"ClientGroupByOutputType","fields":[{"name":"id","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"createdAt","isNullable":false,"outputType":{"isList":false,"type":"DateTime","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"email","isNullable":false,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"name","isNullable":false,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"cpf","isNullable":false,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"city","isNullable":false,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"state","isNullable":false,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"_count","isNullable":true,"outputType":{"isList":false,"type":"ClientCountAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_avg","isNullable":true,"outputType":{"isList":false,"type":"ClientAvgAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_sum","isNullable":true,"outputType":{"isList":false,"type":"ClientSumAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_min","isNullable":true,"outputType":{"isList":false,"type":"ClientMinAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_max","isNullable":true,"outputType":{"isList":false,"type":"ClientMaxAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"AffectedRowsOutput","fields":[{"name":"count","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"ClientCountAggregateOutputType","fields":[{"name":"id","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"createdAt","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"email","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"name","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"cpf","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"city","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"state","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"_all","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"ClientAvgAggregateOutputType","fields":[{"name":"id","isNullable":true,"outputType":{"isList":false,"type":"Float","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"ClientSumAggregateOutputType","fields":[{"name":"id","isNullable":true,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"ClientMinAggregateOutputType","fields":[{"name":"id","isNullable":true,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"createdAt","isNullable":true,"outputType":{"isList":false,"type":"DateTime","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"email","isNullable":true,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"name","isNullable":true,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"cpf","isNullable":true,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"city","isNullable":true,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"state","isNullable":true,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"ClientMaxAggregateOutputType","fields":[{"name":"id","isNullable":true,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"createdAt","isNullable":true,"outputType":{"isList":false,"type":"DateTime","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"email","isNullable":true,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"name","isNullable":true,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"cpf","isNullable":true,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"city","isNullable":true,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"state","isNullable":true,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null}]},"enumTypes":{"model":null,"prisma":[{"name":"ClientScalarFieldEnum","values":["id","createdAt","email","name","cpf","city","state"]},{"name":"SortOrder","values":["asc","desc"]},{"name":"TransactionIsolationLevel","values":["Serializable"]}]}},"mappings":{"modelOperations":[{"model":"Client","findUnique":"findUniqueClient","findFirst":"findFirstClient","findMany":"findManyClient","create":"createOneClient","createMany":null,"update":"updateOneClient","updateMany":"updateManyClient","upsert":"upsertOneClient","delete":"deleteOneClient","deleteMany":"deleteManyClient","aggregate":"aggregateClient","groupBy":"groupByClient","findRaw":null,"aggregateRaw":null}],"otherOperations":{"read":[],"write":["executeRaw","queryRaw"]}}}';

/// Prisma schema DMMF.
final dmmf.Document _dmmf =
    dmmf.Document.fromJson(convert.json.decode(_dmmfStr));

/// Prisma query engine executable.
const String _executable =
    'd:\Projects\forms\backend\.dart_tool\prisma\query-engine';

/// Prisma schema as string.
final String _schema =
    "// This is your Prisma schema file,\r\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\r\n\r\ngenerator client {\r\n  provider        = \"prisma-client-dart\"\r\n  previewFeatures = [\"interactiveTransactions\"]\r\n}\r\n\r\ndatasource db {\r\n  provider = \"sqlite\"\r\n  url      = \"file:./database.sqlite\"\r\n}\r\n\r\n\r\nmodel Client {\r\n  id        Int      @id @default(autoincrement())\r\n  createdAt DateTime @default(now())\r\n  email     String   @unique\r\n  name      String\r\n  cpf       String\r\n  city      String\r\n  state     String\r\n}\r\n\r\n";

class Datasources {
  final runtime.Datasource? db;

  const Datasources({this.db});

  Map<String, runtime.Datasource> toOverwrites() {
    final Map<String, runtime.Datasource> overwrites$ =
        <String, runtime.Datasource>{};
    if (db != null) {
      overwrites$['db'] = db!;
    }

    return overwrites$;
  }
}

/// Prisma client.
class PrismaClient {
  final runtime.Engine _engine;
  final runtime.QueryEngineRequestHeaders? _headers;

  const PrismaClient._(this._engine, this._headers);

  factory PrismaClient({
    Datasources? datasources,
  }) {
    final runtime.Engine engine = runtime.BinaryEngine(
      datasources:
          datasources?.toOverwrites() ?? const <String, runtime.Datasource>{},
      dmmf: _dmmf,
      schema: _schema,
      environment: configure.environment,
      executable: _executable,
    );

    return PrismaClient._(engine, null);
  }

  /// Connect client to database.
  Future<void> $connect() => _engine.start();

  /// Disconnect client from database.
  Future<void> $disconnect() => _engine.stop();

  /// Start transaction.
  ///
  /// Example:
  /// ```dart
  /// final User user = await prisma.$transaction((PrismaClient prisma) async {
  ///   final User user = await prisma.user.create(...);
  ///   final Post post = await prisma.post.create(...);
  ///
  ///   return user;
  /// });
  /// ```
  Future<T> $transaction<T>(Future<T> Function(PrismaClient) handler) async {
    // If current client is already in transaction, use it.
    if (_headers?.transactionId != null) return handler(this);

    // Create transcation common headers.
    final runtime.TransactionHeaders headers = runtime.TransactionHeaders();

    // Request transaction info, Start transaction.
    final runtime.TransactionInfo info =
        await _engine.startTransaction(headers: headers);

    // Create new client with transaction headers.
    final PrismaClient transactionClient = PrismaClient._(
      _engine,
      runtime.QueryEngineRequestHeaders(transactionId: info.id),
    );

    try {
      return handler(transactionClient).then<T>((T value) async {
        await _engine.commitTransaction(headers: headers, info: info);

        return value;
      });
    } catch (e) {
      await _engine.rollbackTransaction(headers: headers, info: info);
      rethrow;
    }
  }

  /// Client model delegate.
  ClientDelegate get client =>
      ClientDelegate(engine: _engine, headers: _headers);
}
